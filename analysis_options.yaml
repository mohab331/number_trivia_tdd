# This file configures the analyzer to use the lint rule set from `package:lint`

#include: package:lint/strict.yaml # For production apps
# include: package:lint/casual.yaml # For code samples, hackathons and other non-production code
# include: package:lint/package.yaml # Use this for packages with public API
include: package:lint/analysis_options.yaml

# You might want to exclude auto-generated files from dart analysis
analyzer:
  exclude:
  #- '**.freezed.dart'
  #- '**.g.dart'
  errors:
    invalid_assignment: warning
    missing_return: error
    dead_code: info
  strong-mode:
    implicit-casts: true
# You can customize the lint rules set to your own liking. A list of all rules
# can be found at https://dart-lang.github.io/linter/lints/options/options.html
linter:
  rules:
    avoid_classes_with_only_static_members: false
    sort_constructors_first: true
    prefer_single_quotes: true
    avoid_print: true
    camel_case_types: true
    library_names: true
    avoid_catches_without_on_clauses: true
    avoid_empty_else: true
    unnecessary_brace_in_string_interps: true
    avoid_redundant_argument_values: true
    leading_newlines_in_multiline_strings: true
    curly_braces_in_flow_control_structures: true
    slash_for_doc_comments: true
    await_only_futures: true
    always_declare_return_types: true
    comment_references: true
    package_api_docs: true
    prefer_final_in_for_each: true
    depend_on_referenced_packages: false
    control_flow_in_finally: true
    empty_statements: true
    no_logic_in_create_state: true
    prefer_relative_imports: false
    prefer_void_to_null: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    avoid_renaming_method_parameters: true
    avoid_returning_this: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    directives_ordering: true
    prefer_if_null_operators: true
    prefer_null_aware_method_calls: true
    require_trailing_commas: true